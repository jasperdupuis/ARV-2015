/*Copyright (c) 2015, Jasper Dupuis and Nicholas Campbell
All rights reserved.
Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:
1. Redistributions of source code must retain the above copyright notice, this list of conditions and
the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions
and the following disclaimer in the documentation and/or other materials provided
with the
distribution.
3. Neither the name of the copyright holder nor the names of its contributors may be used to
endorse or promote products derived from this software without specific prior written permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGH
T HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
HOLDER OR CONTRIBUTORS B
E LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEO
RY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
This header file includes prototypes of what's necessary to enable wheel encoder program. 
The software is designed such that for a wheel with N holes or notches, there 
will be 2N ticks of the counter. This is because the wheel and encoder share 
the same axis and speed of rotation. Using a measured diameter of 6.5cm and 
N=6 as specified, this equates to 1.7 cm / tick.

An 8-bit variable is used as it corresponds to over 216cm of travel before overflow.
The resolution can be increased by a factor of 2 or 4 before the counters are at 
risk of overflow.

encoder_setup(); must be called by your main function.

*/
#ifndef ENCODER_LIB_H
#define ENCODER_LIB_H

#include "declarations.h"

uint8_t right_distance(void);
uint8_t left_distance(void);
void reset_distances(void);

extern uint8_t left_encoder_count(void);

extern uint8_t right_encoder_count(void);

extern void reset_encoders(void);

extern void encoder_setup(void);

extern volatile uint8_t leftdistance;
extern volatile uint8_t rightdistance;

/*uart entry functions*/
extern void init_uart(void);

#endif
